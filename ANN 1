import matplotlib.pyplot as plt
import tensorflow as tf
import random

#report constants
a = 4
c = 2
w1 = 3
b2 = 4
w2 = 6
b3 = 7
iteration = 10000

def y (a,c):

    y_in = []
    x_in = [0,1,2,3,4,5]

    for x in x_in :
        y_in.append (
            x * a + c
            
        )
    return x_in, y_in
x_in, y_in = y (a,c)
print (y_in)
print (x_in)

def Y_1 (w1,b2):

    Y_in = []
    x_in 

    for x in x_in :
        Y_in.append (
            x * w1 + b2
        )
    return Y_in
Y_in = Y_1 (w1,b2)
print (Y_in)
print (x_in)

def Y_2 (w2,b3):

    Y_in 
    Y_in2 = []

    for x in Y_in:
        Y_in2.append (
            w2 * x + b3
        )
    return Y_in, Y_in2
Y_in, Y_in2 = Y_2 (w2,b3)
print (Y_in2)

#besok coba turunin ulang semuanya!!
def dLdW2 (w1, w2, b2, b3):

    N = 6
    sumdw2 = 0
    for N in range (N):
        sumdw2 += (-2/6)*(y_in [N-1] - w2 * (w1*x_in[N-1]+b2)-b3 )*(w1*x_in[N-1]+b2)
    return sumdw2
sumdw2 = dLdW2 (w1, w2, b2, b3)
print (sumdw2)

def dLdB2 (w1, w2, b2, b3):

    N = 6
    sumdb2 = 0
    for N in range (N):
        sumdb2 += (-2/6)*(y_in [N-1] - w2 *(w1*x_in[N-1]+b2) - b3) 
    return sumdb2
sumdb2 = dLdB2 (w1, w2, b2, b3)
print (sumdb2)

def dLdW1 (w1, w2, b2, b3):

    N = 6
    sumdw1 = 0
    for N in range (N):
        sumdw1 += (-2/6)*(y_in[N-1] - w2 * (w1*x_in[N-1]+b2) - b3)*(w2)*(x_in [N-1])
    return sumdw1
sumdw1 = dLdW1 (w1, w2, b2, b3)
print (sumdw1)

def dLdB1 (w1, w2, b2, b3):

    N = 6
    sumdb1 = 0
    for N in range (N):
        sumdb1 += (-2/6)*(y_in[N-1] - w2 * (w1*x_in[N-1]+b2) - b3)*(w2)
    return sumdb1
sumdb1 = dLdB1 (w1, w2, b2, b3)
print (sumdb1)

w_1t_data = []
b_2t_data = []

def w_2update (w1, w2o, b2, b3o):
    
    epochs = 1000
    delta = 0.001
    
    
    for epochs in range (epochs):
        fig, ax = plt.subplots(1,2, figsize=(10,5), dpi=500)
        w_2 = w2o - delta * dLdW2 (w1, w2, b2, b3)
        b_3 = b3o - delta * dLdB2 (w1, w2, b2, b3)
        w_10 = w_2 - delta * dLdW1 (w1, w_2, b2, b_3)
        b_20 = b_3 - delta * dLdB1 (w1, w_2, b2, b_3)
        w_1t = w2 - delta * dLdW2 (w_10, w_2, b_20, b_3)
        b_2t = b3 - delta * dLdB2 (w_10, w_2, b_20, b_3)
        w2o = w_1t
        b3o = b_2t
        w_1t_data.append(w_1t)
        b_2t_data.append(b_2t)
        #print (f"w_1t : {w_1t:.2f} | b_2t : {b_2t:.2f}")
        ax[0].plot(w_1t_data)
        ax[1].plot(b_2t_data)

    return epochs, b_2t, w_1t

epochs, b_2t, w_1t = w_2update (w1, w2, b2, b3)
